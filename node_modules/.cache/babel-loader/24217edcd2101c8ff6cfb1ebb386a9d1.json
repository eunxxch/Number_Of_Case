{"ast":null,"code":"// 가위바위보 종류\nconst HANDS = ['rock', 'scissor', 'paper']; // 가위바위보 이기는 경우\n\nconst WINS = {\n  rock: 'scissor',\n  scissor: 'paper',\n  paper: 'rock'\n};\nexport function compareHand(a, b) {\n  if (WINS[a] === b) return 1;\n  if (WINS[b] === a) return -1;\n  return 0;\n} // 1-n까지의 랜덤한 정수를 반환하는 함수\n\nfunction random(n) {\n  return Math.floor(Math.random() * n);\n}\n\nexport function generateRandomHand() {\n  const idx = random(HANDS.length);\n  return HANDS[idx];\n}","map":{"version":3,"sources":["/Users/ejchoi/Desktop/number-of-case/src/utils.js"],"names":["HANDS","WINS","rock","scissor","paper","compareHand","a","b","random","n","Math","floor","generateRandomHand","idx","length"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,CAAd,C,CAEA;;AACA,MAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE,SADK;AAEXC,EAAAA,OAAO,EAAE,OAFE;AAGXC,EAAAA,KAAK,EAAE;AAHI,CAAb;AAMA,OAAO,SAASC,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AAChC,MAAIN,IAAI,CAACK,CAAD,CAAJ,KAAYC,CAAhB,EAAmB,OAAO,CAAP;AACnB,MAAIN,IAAI,CAACM,CAAD,CAAJ,KAAYD,CAAhB,EAAmB,OAAO,CAAC,CAAR;AACnB,SAAO,CAAP;AACD,C,CAED;;AACA,SAASE,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACF,MAAL,KAAgBC,CAA3B,CAAP;AACD;;AAED,OAAO,SAASG,kBAAT,GAA8B;AACnC,QAAMC,GAAG,GAAGL,MAAM,CAACR,KAAK,CAACc,MAAP,CAAlB;AACA,SAAOd,KAAK,CAACa,GAAD,CAAZ;AACD","sourcesContent":["// 가위바위보 종류\nconst HANDS = ['rock', 'scissor', 'paper'];\n\n// 가위바위보 이기는 경우\nconst WINS = {\n  rock: 'scissor',\n  scissor: 'paper',\n  paper: 'rock',\n};\n\nexport function compareHand(a, b) {\n  if (WINS[a] === b) return 1;\n  if (WINS[b] === a) return -1;\n  return 0;\n}\n\n// 1-n까지의 랜덤한 정수를 반환하는 함수\nfunction random(n) {\n  return Math.floor(Math.random() * n);\n}\n\nexport function generateRandomHand() {\n  const idx = random(HANDS.length);\n  return HANDS[idx];\n}\n"]},"metadata":{},"sourceType":"module"}