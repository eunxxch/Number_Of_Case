{"ast":null,"code":"var _jsxFileName = \"/Users/ejchoi/Desktop/number-of-case/src/HandIcon.js\";\n// 아이콘 컴포넌트\n// 아이콘 경로 지정 및 이름 지정\nimport rockImg from './assets/rock.svg';\nimport scissorImg from './assets/scissor.svg';\nimport paperImg from './assets/paper.svg';\nimport './HandIcon.css'; // 상수 객체 선언\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HAND_IMAGES = {\n  'rock': rockImg,\n  'scissor': scissorImg,\n  'paper': paperImg\n}; // 컴포넌트 선언\n// (대문자로 시작하는 함수 생성)\n\nfunction HandIcon(_ref) {\n  let {\n    value,\n    winner,\n    className = ''\n  } = _ref;\n  // value prop 설정\n  const src = HAND_IMAGES[value]; // value의 값을 반환\n\n  const classNames = `Hand-icon ${winner}`;\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: classNames,\n    src: src,\n    alt: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this); // alt = value name\n}\n\n_c = HandIcon;\nexport default HandIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandIcon\");","map":{"version":3,"sources":["/Users/ejchoi/Desktop/number-of-case/src/HandIcon.js"],"names":["rockImg","scissorImg","paperImg","HAND_IMAGES","HandIcon","value","winner","className","src","classNames"],"mappings":";AAAA;AACA;AACA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAO,gBAAP,C,CAEA;;;AACA,MAAMC,WAAW,GAAG;AAClB,UAASH,OADS;AAElB,aAAYC,UAFM;AAGlB,WAAUC;AAHQ,CAApB,C,CAMA;AACA;;AACA,SAASE,QAAT,OAAmD;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,SAAS,GAAC;AAA3B,GAAiC;AAAE;AACnD,QAAMC,GAAG,GAAGL,WAAW,CAACE,KAAD,CAAvB,CADiD,CACjB;;AAChC,QAAMI,UAAU,GAAI,aAAYH,MAAO,EAAvC;AACA,sBAAO;AAAK,IAAA,SAAS,EAAEG,UAAhB;AAA4B,IAAA,GAAG,EAAED,GAAjC;AAAsC,IAAA,GAAG,EAAEH;AAA3C;AAAA;AAAA;AAAA;AAAA,UAAP,CAHiD,CAGY;AAC9D;;KAJQD,Q;AAMT,eAAeA,QAAf","sourcesContent":["// 아이콘 컴포넌트\n// 아이콘 경로 지정 및 이름 지정\nimport rockImg from './assets/rock.svg';\nimport scissorImg from './assets/scissor.svg';\nimport paperImg from './assets/paper.svg';\nimport './HandIcon.css';\n\n// 상수 객체 선언\nconst HAND_IMAGES = {\n  'rock' : rockImg, \n  'scissor' : scissorImg, \n  'paper' : paperImg\n};\n\n// 컴포넌트 선언\n// (대문자로 시작하는 함수 생성)\nfunction HandIcon({ value, winner, className='' }) { // value prop 설정\n  const src = HAND_IMAGES[value]; // value의 값을 반환\n  const classNames = `Hand-icon ${winner}`;\n  return <img className={classNames} src={src} alt={value} />; // alt = value name\n}\n\nexport default HandIcon;"]},"metadata":{},"sourceType":"module"}